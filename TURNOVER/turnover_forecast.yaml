schemaVersion: 3
meta:
  sourceVersionId: a74114f7-c5fe-48d9-9cc5-5fcaebf53af5 # DO NOT CHANGE - Hex uses this to match up project versions when reimporting the file
  description: null
  projectId: 6de9a3fd-0345-431a-a01a-73a53fef7597 # DO NOT CHANGE - Unique ID of the project from which this file was generated
  title: turnover_forecast
  timezone: null
  appTheme: SYS_PREF
  codeLanguage: PYTHON
  status: null
  categories: []
  castDecimalsDefault: true
  logicQueryCacheTimeout: null
  publishedQueryCacheTimeout: null
  hexType: PROJECT
  allowExecutionReordering: true
  prerunApp: false
  cachePublishedAppState: true
  refreshStalePublishedApp: false
  autoRerunApp: true
projectAssets:
  dataConnections: []
  envVars: []
  secrets: []
sharedAssets:
  secrets:
    - secretName: SF_ACCOUNT
    - secretName: SF_DATABASE
    - secretName: SF_PASSWORD
    - secretName: SF_ROLE
    - secretName: SF_SCHEMA
    - secretName: SF_USER
    - secretName: SF_WAREHOUSE
  vcsPackages: []
  dataConnections:
    - dataConnectionId: 4391debb-0cd6-494c-bfa2-167e8ad6c4a0 # SNOWFLAKE_TRIAL (snowflake)
    - dataConnectionId: cc4f7aef-f3dc-4259-b8a2-bd93d16d4279 # [Demo] Hex Public Data (snowflake)
  externalFileIntegrations: []
cells:
  - cellType: CODE
    cellId: af286fb6-ba50-4a5f-9d5a-a9e2bbd89faa # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      source: |-
        import snowflake.connector
        import pandas as pd
        from snowflake.connector import DictCursor
        from snowflake.snowpark.session import Session
        from snowflake.snowpark import DataFrame
        from snowflake.snowpark.functions import col
        from sklearn.ensemble import IsolationForest

        connection_params = {
            "ACCOUNT": SF_ACCOUNT,
            "USER": SF_USER,
            "PASSWORD": SF_PASSWORD,
            "ROLE": SF_ROLE,
            "WAREHOUSE": SF_WAREHOUSE,
            "DATABASE": SF_DATABASE,
            "SCHEMA": SF_SCHEMA,
        }


        def hello(session: Session) -> DataFrame:
            df = session.table("SNOWLENS.DEMO.TURNOVER")
            return df


        if __name__ == "__main__":
            session = Session.builder.configs(connection_params).create()
            print(hello(session).show())
  - cellType: CODE
    cellId: 01a83025-4fdf-493e-a09e-d03c697c9758 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      source: |-
        import snowflake.connector
        import pandas as pd
        from snowflake.connector import DictCursor
        from snowflake.snowpark.session import Session
        from snowflake.snowpark import DataFrame
        from snowflake.snowpark.functions import col
        from sklearn.ensemble import IsolationForest

        connection_params = {
            "ACCOUNT": SF_ACCOUNT,
            "USER": SF_USER,
            "PASSWORD": SF_PASSWORD,
            "ROLE": SF_ROLE,
            "WAREHOUSE": SF_WAREHOUSE,
            "DATABASE": SF_DATABASE,
            "SCHEMA": SF_SCHEMA,
        }


        def hello(session: Session) -> DataFrame:
            df = session.table("SNOWLENS.DEMO.TURNOVER")
            return df


        if __name__ == "__main__":
            session = Session.builder.configs(connection_params).create()
            print(hello(session).show())
appLayout:
  visibleMetadataFields:
    - NAME
    - DESCRIPTION
    - AUTHOR
    - LAST_EDITED
    - LAST_RUN
    - CATEGORIES
    - STATUS
    - TABLE_OF_CONTENTS
  fullWidth: false
  tabs:
    - name: Tab 1
      rows:
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 01a83025-4fdf-493e-a09e-d03c697c9758
                  sharedFilterId: null
                  height: null
                  showLabel: true
sharedFilters: []
